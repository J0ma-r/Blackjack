from IPython.display import clear_output
import random
suits = ('Hearts', 'Diamonds', 'Spades', 'Clubs')
ranks = ('Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Jack', 'Queen', 'King', 'Ace')
values = {'Two':2, 'Three':3, 'Four':4, 'Five':5, 'Six':6, 'Seven':7, 'Eight':8, 'Nine':9, 'Ten':10, 'Jack':10,
         'Queen':10, 'King':10, 'Ace':11}
         

# CREATING THE CARD

class Card:
    def __init__(self,suit,rank):
        self.rank = rank
        self.suit = suit
        self.value = values[rank]
        
    def __str__(self):
        return self.rank + " of " + self.suit


# CREATING THE DECK

class Deck:
    def __init__(self):
        self.all_cards = []
        
        for suit in suits:
            for rank in ranks:
                #create the card object
                
                created_card = Card(suit,rank)
                self.all_cards.append(created_card)
                
    def shuffle(self):
        random.shuffle(self.all_cards)
        
    def deal_one(self):
        return self.all_cards.pop()
        
        
# CREATING THE PLAYER

class Player:
    def __init__(self,name):
        self.name = name
        self.all_cards = []
        
    def remove_one(self):
        return self.all_cards.pop(0)
    
    def add_cards(self,new_cards):
        if type(new_cards) == type([]):
            self.all_cards.extend(new_cards)
        else:
            self.all_cards.append(new_cards)
    
    def __str__(self):
        return f"player {self.name} has {len(self.all_cards)} cards"
        
        
# A BASIC TABLE

def display_table_dealer_turn(player,dealer,list1,list2,deck):
    
   
    for card in dealer.all_cards:
        print(f'DEALER - {card}: {card.value}')
        
    print(f'Total value = {sum(list1)}')
        
    print(' ')
    
    
    for card in player.all_cards:
        print(f'PLAYER - {card}: {card.value}')
        
    print(f'Total value = {sum(list2)}')
    

def display_table_player_turn(player,dealer,list1,list2,deck):  
        
    
    
    print('DEALER')
    print(f'{dealer.all_cards[0]}: {dealer.all_cards[0].value}')
        
    print(' ')
    print('PLAYER')
    
    for card in player.all_cards:
        print(f'{card}: {card.value}')
    print(f'Total value = {sum(list2)}')
    
    
def start_round():
    player = Player('player')
    dealer = Player('dealer')
    
    player_bank = 100
    
    list1 = []
    list2 = []
    
    deck = Deck()
    deck.shuffle()
    append(player.add_cards(deck.deal_one()))
    player.add_cards(deck.deal_one())
    dealer.add_cards(deck.deal_one())
    dealer.add_cards(deck.deal_one())


# PLACING A BET

def player_bet():
    
    bet = 0
    
    while bet not in range(1,100):
        bet = int(input("how much would you like to bet?"))
        
        
        
# GAME LOGIC

def black_jack():  
    
    
    
    player_bank = 100
    
    game_on = True   
    
    
            
    while game_on == True:
        
        the_round = True

        while the_round == True:
            
            
            #INTO 
            player = Player('player')
            dealer = Player('dealer')
            
            list1 = []
            list2 = []

            deck = Deck()
            deck.shuffle()
            player.add_cards(deck.deal_one())
            player.add_cards(deck.deal_one())
            dealer.add_cards(deck.deal_one())
            dealer.add_cards(deck.deal_one())

            for card in player.all_cards:
                list2.append(card.value)

            for card in dealer.all_cards:
                list1.append(card.value)

                
            #PLAYER BET 
            
            bet = 0    
            print(f'Your current bank is {player_bank}!')
            while bet not in range(1,(player_bank+1)):
                bet = int(input("how much would you like to bet?"))
            
            
            # PLAYER TURN 
            dealer_turn = False
            player_turn = True
            while player_turn == True:
    
                clear_output()
                display_table_player_turn(player,dealer,list1,list2,deck)
                answer = 'holding'
                while answer not in ['h','s']:
                    answer = input("do you want to HIT or STAY? (h/s)")
           
            
                    if answer == 's':
                        player_turn = False
                        dealer_turn = True
                        break
            
                    elif answer == 'h':
                        player.add_cards(deck.deal_one())
                        list2.append(player.all_cards[-1].value)
            
                    else:
                        pass
            
                    if sum(list2) > 21:
                          for n, i in enumerate(list2):
                            if i == 11:
                                list2[n] = 1

                    else:
                        pass


                    if sum(list2) > 21:
                        clear_output()
                        display_table_player_turn(player,dealer,list1,list2,deck,)
                        print("BUST! Dealer wins!")
                        player_bank = player_bank - bet
                        
                        the_round = False
                        player_turn = False
                        break

                    else:
                        pass
           
            
            # DEALER TURN
            clear_output()
            display_table_dealer_turn(player,dealer,list1,list2,deck)

            while dealer_turn == True:


                if sum(list1) > 21:
                        for n, i in enumerate(list1):
                            if i == 11:
                                list1[n] = 1

                        else:
                            clear_output()
                            display_table_dealer_turn(player,dealer,list1,list2,deck)
                            print("BUST! Player wins!")
                            player_bank = player_bank + bet
                            
                            the_round = False
                            dealer_turn = False
                            break

                elif sum(list1) > sum(list2):
                    clear_output()
                    display_table_dealer_turn(player,dealer,list1,list2,deck)
                    print("Dealer wins!")
                    player_bank = player_bank - bet
                    
                    the_round = False
                    dealer_turn = False
                    break

                elif sum(list1) == sum(list2) == 21:
                    clear_output()
                    display_table_dealer_turn(player,dealer,list1,list2,deck)
                    print("It's a DRAW!")
                    the_round = False
                    dealer_turn = False
                    break

                else:
                    dealer.add_cards(deck.deal_one())
                    list1.append(dealer.all_cards[-1].value)
            
            
            

        if player_bank == 0:
            print('GAME OVER')
            game_on = False
